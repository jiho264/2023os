{
    "git.ignoreMissingGitWarning": true,
    "code-runner.runInTerminal": true,
    "editor.formatOnType": true,
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "files.autoSave": "onWindowChange",
    "code-runner.saveFileBeforeRun": true,
    "code-runner.executorMap": {
        "javascript": "node",
        "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
        // original
        //"c": "cd $dir && clang $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "c": "cd $dir && clang $fileName -o $fileNameWithoutExt && ./$fileNameWithoutExt",
        // original
        //"cpp": "cd $dir && clang++ -std=c++17 $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        // a.out short
        //"cpp": "cd $dir && clang++ -std=c++17 $fileName && ./a.out",
        // SFML
        "cpp": "echo SFML && cd $dir && clang++ -std=c++17 -lsfml-graphics -lsfml-system -lsfml-window -I/opt/homebrew/Cellar/sfml/2.5.1_2/include -L/opt/homebrew/Cellar/sfml/2.5.1_2/lib $fileName && ./a.out",
        "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "php": "php",
        "python": "cd $dir && python3 -u $fileName",
        "perl": "perl",
        "perl6": "perl6",
        "ruby": "ruby",
        "go": "go run",
        "lua": "lua",
        "groovy": "groovy",
        "powershell": "powershell -ExecutionPolicy ByPass -File",
        "bat": "cmd /c",
        "shellscript": "bash",
        "fsharp": "fsi",
        "csharp": "scriptcs",
        "vbscript": "cscript //Nologo",
        "typescript": "ts-node",
        "coffeescript": "coffee",
        "scala": "scala",
        "swift": "swift",
        "julia": "julia",
        "crystal": "crystal",
        "ocaml": "ocaml",
        "r": "Rscript",
        "applescript": "osascript",
        "clojure": "lein exec",
        "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
        "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
        "racket": "racket",
        "scheme": "csi -script",
        "ahk": "autohotkey",
        "autoit": "autoit3",
        "dart": "dart",
        "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
        "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
        "haskell": "runhaskell",
        "nim": "nim compile --verbosity:0 --hints:off --run",
        "lisp": "sbcl --script",
        "kit": "kitc --run",
        "v": "v run",
        "sass": "sass --style expanded",
        "scss": "scss --style expanded",
        "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
        "FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"
    },
    "code-runner.executorMapByFileExtension": {
        ".asm": "open -a dosbox --args -c 'mount x $dir' -c x: -c 'ml $fileName' -c $fileNameWithoutExt",
        ".vb": "cd $dir && vbc /nologo $fileName && $dir$fileNameWithoutExt",
        ".vbs": "cscript //Nologo",
        ".scala": "scala",
        ".jl": "julia",
        ".cr": "crystal",
        ".ml": "ocaml",
        ".exs": "elixir",
        ".hx": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
        ".rkt": "racket",
        ".scm": "csi -script",
        ".ahk": "autohotkey",
        ".au3": "autoit3",
        ".kt": "cd $dir && kotlinc $fileName -include-runtime -d $fileNameWithoutExt.jar && java -jar $fileNameWithoutExt.jar",
        ".kts": "kotlinc -script",
        ".dart": "dart",
        ".pas": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
        ".pp": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
        ".d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
        ".hs": "runhaskell",
        ".nim": "nim compile --verbosity:0 --hints:off --run",
        ".csproj": "dotnet run --project",
        ".fsproj": "dotnet run --project",
        ".lisp": "sbcl --script",
        ".kit": "kitc --run",
        ".v": "v run",
        ".vsh": "v run",
        ".sass": "sass --style expanded",
        ".cu": "cd $dir && nvcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        ".ring": "ring"
    },
    "code-runner.executorMapByGlob": {
        "pom.xml": "cd $dir && mvn clean package"
    },
    "code-runner.languageIdToFileExtensionMap": {
        "asm": ".asm",
        "bat": ".bat",
        "powershell": ".ps1",
        "typescript": ".ts"
    },
    "workbench.preferredLightColorTheme": "Abyss",
    "workbench.preferredHighContrastLightColorTheme": "Default Dark+",
    "workbench.preferredHighContrastColorTheme": "Default Dark+",
    "editor.cursorWidth": 2,
    "workbench.colorTheme": "Nebula Pandas Theme",
    "files.autoGuessEncoding": true,
    "lldb.suppressUpdateNotifications": true,
    "cmake.configureOnOpen": true,
    "[cpp]": {
        "editor.wordBasedSuggestions": false,
        "editor.suggest.insertMode": "replace",
        "editor.semanticHighlighting.enabled": true
    },
    "task.problemMatchers.neverPrompt": false,
    "git.autofetch": true,
    "files.exclude": {
        ".git": true,
        ".ipynb_checkpoints": true,
        "**/.git": false,
        "**/**.dSYM": true,
        "**/a.out": true
    },
    "git.confirmSync": false,
    "git.enableSmartCommit": true,
    "workbench.iconTheme": "material-icon-theme",
    "workbench.colorCustomizations": {},
    "python.defaultInterpreterPath": "/usr/bin/python3",
    "editor.minimap.enabled": false,
    "editor.stickyScroll.enabled": true,
    "sync.gist": "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",
    "sync.autoUpload": true,
    "settingsSync.ignoredSettings": [
        "-C_Cpp.default.systemIncludePath",
        "-C_Cpp.default.windowsSdkVersion",
        "-C_Cpp.default.browse.databaseFilename",
        "-C_Cpp.default.browse.path",
        "-C_Cpp.default.compileCommands",
        "-C_Cpp.default.compilerArgs",
        "-C_Cpp.default.compilerPath",
        "-C_Cpp.default.customConfigurationVariables",
        "-C_Cpp.default.defines",
        "-C_Cpp.default.forcedInclude",
        "-C_Cpp.default.includePath",
        "-C_Cpp.default.intelliSenseMode",
        "-C_Cpp.default.macFrameworkPath",
        "-C_Cpp.clang_format_path",
        "-C_Cpp.codeAnalysis.maxMemory",
        "-C_Cpp.intelliSense.maxMemory",
        "-C_Cpp.intelliSense.maxCachedProcesses",
        "-C_Cpp.intelliSenseCachePath",
        "-C_Cpp.intelliSenseCacheSize",
        "-C_Cpp.intelliSenseMemoryLimit",
        "-C_Cpp.maxCachedProcesses",
        "-C_Cpp.maxConcurrentThreads"
    ],
    "diffEditor.ignoreTrimWhitespace": false,
    "terminal.integrated.inheritEnv": false,
    "search.useParentIgnoreFiles": true,
    "terminal.integrated.enableMultiLinePasteWarning": false,
    "notebook.lineNumbers": "on",
    "notebook.cellToolbarVisibility": "hover",
    "notebook.diff.ignoreMetadata": true,
    "notebook.diff.ignoreOutputs": true,
    "prettier.arrowParens": "avoid",
    "prettier.tabWidth": 4,
    "indentRainbow.indicatorStyle": "light",
    "indentRainbow.lightIndicatorStyleLineWidth": 3,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "[c]": {
        "editor.defaultFormatter": "ms-vscode.cpptools"
    }
}
